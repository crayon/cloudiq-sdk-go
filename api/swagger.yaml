openapi: 3.0.1
info:
  title: Crayon Group Customer API
  version: v1
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v1/ActivityLogs:
    get:
      tags:
      - ActivityLogs
      parameters:
      - name: Entity
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Ids
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: SearchDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: From
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: To
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLogItem'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLogItem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLogItem'
  /api/v1/organizations/{organizationId}/Addresses:
    get:
      tags:
      - Addresses
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AddressType'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
  /api/v1/organizations/{organizationId}/Addresses/{id}:
    get:
      tags:
      - Addresses
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Address'
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            text/json:
              schema:
                $ref: '#/components/schemas/Address'
  /api/v1/AgreementProducts:
    get:
      tags:
      - AgreementProducts
      parameters:
      - name: AgreementTypeIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AgreementType'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: PriceListId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: CustomerTenantId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: AgreementId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: IsTrial
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
      - name: AgreementIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: SearchDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Include.PartNumbers
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.PublisherIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: Include.PublisherNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.PoolNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.OperatingSystemNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.LevelNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.LanguageNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.LicenseAgreementTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.LicenseTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.ProductFamilyNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.ProductTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.ProgramNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.OfferingNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.PurchasePeriodNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.PurchaseUnitNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.VersionNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.RegionNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.ProductCategoryNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.CatalogNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Include.BillingCycles
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.PartNumbers
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.PublisherIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: Exclude.PublisherNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.PoolNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.OperatingSystemNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.LevelNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.LanguageNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.LicenseAgreementTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.LicenseTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.ProductFamilyNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.ProductTypeNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.ProgramNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.OfferingNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.PurchasePeriodNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.PurchaseUnitNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.VersionNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.RegionNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.ProductCategoryNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.CatalogNames
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Exclude.BillingCycles
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: SortKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: IncludeProductInformation
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: SortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
    post:
      tags:
      - AgreementProducts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementProduct'
  /api/v1/AgreementProducts/file/xlsx:
    post:
      tags:
      - AgreementProducts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AgreementProductFilter'
      responses:
        "200":
          description: Success
  /api/v1/AgreementProducts/{partNumber}/supportedbillingcycles:
    get:
      tags:
      - AgreementProducts
      parameters:
      - name: resellerCustomerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: partNumber
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycleEnum'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycleEnum'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycleEnum'
  /api/v1/AgreementReports/{productContainerId}:
    get:
      tags:
      - AgreementReports
      parameters:
      - name: productContainerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementReport'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementReport'
  /api/v1/AgreementReports/{agreementId}:
    put:
      tags:
      - AgreementReports
      parameters:
      - name: agreementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AgreementReport'
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementReport'
          text/json:
            schema:
              $ref: '#/components/schemas/AgreementReport'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AgreementReport'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AgreementReport'
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementReport'
            text/json:
              schema:
                $ref: '#/components/schemas/AgreementReport'
  /api/v1/Agreements:
    get:
      tags:
      - Agreements
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OrganizationIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: PricelistIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AgreementStatus'
      - name: AgreementTypes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AgreementType'
      - name: PublisherIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: ProgramIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: SearchDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: AgreementIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: SalesPriceCurrency
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: TermRequired
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: EndDateFrom
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateTo
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agreement'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agreement'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agreement'
  /api/v1/Assets:
    get:
      tags:
      - Assets
      parameters:
      - name: ResellerCustomerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ExternalOrderId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ExternalOrderIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: ReservationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: AssetType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetType'
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetStatus'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetSortBy'
      - name: SortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
  /api/v1/Assets/{id}:
    get:
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Asset'
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            text/json:
              schema:
                $ref: '#/components/schemas/Asset'
  /api/v1/Assets/orders:
    get:
      tags:
      - Assets
      parameters:
      - name: ResellerCustomerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ExternalOrderId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ExternalOrderIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: ReservationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: AssetType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetType'
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetStatus'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AssetSortBy'
      - name: SortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetOrder'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetOrder'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetOrder'
  /api/v1/Assets/verify:
    post:
      tags:
      - Assets
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssetOrder'
            application/json:
              schema:
                $ref: '#/components/schemas/AssetOrder'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetOrder'
  /api/v1/Assets/checkout:
    post:
      tags:
      - Assets
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssetOrder'
      responses:
        "200":
          description: Success
  /api/v1/Assets/{assetId}:
    put:
      tags:
      - Assets
      parameters:
      - name: assetId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Asset'
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
          text/json:
            schema:
              $ref: '#/components/schemas/Asset'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        "200":
          description: Success
  /api/v1/Assets/{assetId}/tags:
    put:
      tags:
      - Assets
      parameters:
      - name: assetId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssetTags'
      responses:
        "200":
          description: Success
    post:
      tags:
      - Assets
      parameters:
      - name: assetId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          application/json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetTags'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssetTags'
      responses:
        "200":
          description: Success
    delete:
      tags:
      - Assets
      parameters:
      - name: assetId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/AwsAccounts:
    get:
      tags:
      - AwsAccounts
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ConsumerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: CustomerTenantType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CustomerTenantType'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsAccount'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsAccount'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsAccount'
  /api/v1/AwsAccounts/{id}:
    get:
      tags:
      - AwsAccounts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AwsAccount'
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/AwsAccount'
    put:
      tags:
      - AwsAccounts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AwsAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/AwsAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/AwsAccount'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AwsAccount'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AwsAccount'
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/AwsAccount'
  /api/v1/AzurePlans/{azurePlanId}:
    get:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzurePlan'
            application/json:
              schema:
                $ref: '#/components/schemas/AzurePlan'
            text/json:
              schema:
                $ref: '#/components/schemas/AzurePlan'
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions:
    get:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureSubscription'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureSubscription'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureSubscription'
    post:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAzureSubscriptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureSubscriptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAzureSubscriptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAzureSubscriptionRequest'
      responses:
        "200":
          description: Success
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions/{id}:
    get:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
    put:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PutAzureSubscription'
          application/json:
            schema:
              $ref: '#/components/schemas/PutAzureSubscription'
          text/json:
            schema:
              $ref: '#/components/schemas/PutAzureSubscription'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PutAzureSubscription'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions/{id}/assign-unique-admin:
    put:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionAssignAdmin'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionAssignAdmin'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionAssignAdmin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionAssignAdmin'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions/{id}/cancel:
    post:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions/{id}/enable:
    post:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
  /api/v1/AzurePlans/{azurePlanId}/azureSubscriptions/{id}/rename:
    patch:
      tags:
      - AzurePlans
      parameters:
      - name: azurePlanId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionRename'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionRename'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionRename'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionRename'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSubscriptionUpdated'
  /api/v1/BillingCycles:
    get:
      tags:
      - BillingCycles
      parameters:
      - name: includeUnknown
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
  /api/v1/BillingCycles/productVariant/{productVariantId}:
    get:
      tags:
      - BillingCycles
      parameters:
      - name: productVariantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingCycle'
  /api/v1/BillingCycles/cspNameDictionary:
    get:
      tags:
      - BillingCycles
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: text/plain
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/BillingStatements:
    get:
      tags:
      - BillingStatements
      parameters:
      - name: InvoiceProfileId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ProvisionType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProvisionType'
      - name: From
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: To
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingStatement'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingStatement'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingStatement'
  /api/v1/BillingStatements/grouped:
    get:
      tags:
      - BillingStatements
      parameters:
      - name: InvoiceProfileId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ProvisionType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProvisionType'
      - name: From
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: To
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupedBillingStatement'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupedBillingStatement'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupedBillingStatement'
  /api/v1/BillingStatements/file/{id}:
    get:
      tags:
      - BillingStatements
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/BillingStatements/{id}/reconciliationfile:
    get:
      tags:
      - BillingStatements
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/BillingStatements/{id}/billingrecordsfile:
    get:
      tags:
      - BillingStatements
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/BlogItems:
    get:
      tags:
      - BlogItems
      parameters:
      - name: count
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 6
      - name: organizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogItem'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogItem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogItem'
  /api/v1/Clients:
    get:
      tags:
      - Clients
      parameters:
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      tags:
      - Clients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Client'
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          text/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Client'
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            text/json:
              schema:
                $ref: '#/components/schemas/Client'
  /api/v1/Clients/{clientId}:
    get:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Client'
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            text/json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Client'
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          text/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Client'
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            text/json:
              schema:
                $ref: '#/components/schemas/Client'
    delete:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/Consumers:
    get:
      tags:
      - Consumers
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
    post:
      tags:
      - Consumers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Consumer'
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
          text/json:
            schema:
              $ref: '#/components/schemas/Consumer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Consumer'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Consumer'
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
            text/json:
              schema:
                $ref: '#/components/schemas/Consumer'
  /api/v1/Consumers/{id}:
    get:
      tags:
      - Consumers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Consumer'
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
            text/json:
              schema:
                $ref: '#/components/schemas/Consumer'
    put:
      tags:
      - Consumers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Consumer'
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
          text/json:
            schema:
              $ref: '#/components/schemas/Consumer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Consumer'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Consumer'
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
            text/json:
              schema:
                $ref: '#/components/schemas/Consumer'
    delete:
      tags:
      - Consumers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/CrayonAccounts:
    get:
      tags:
      - CrayonAccounts
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ConsumerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: CustomerTenantType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CustomerTenantType'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrayonAccount'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrayonAccount'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrayonAccount'
    post:
      tags:
      - CrayonAccounts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            application/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
  /api/v1/CrayonAccounts/{id}:
    get:
      tags:
      - CrayonAccounts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            application/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
    put:
      tags:
      - CrayonAccounts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CrayonAccount'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            application/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CrayonAccount'
  /api/v1/customertenants/{customerTenantId}/agreements:
    get:
      tags:
      - CustomerTenantAgreements
      parameters:
      - name: customerTenantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: AgreementTypeConsent
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AgreementTypeConsent'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountAgreement'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountAgreement'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountAgreement'
    post:
      tags:
      - CustomerTenantAgreements
      parameters:
      - name: customerTenantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountAgreement'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountAgreement'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountAgreement'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceAccountAgreement'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceAccountAgreement'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountAgreement'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountAgreement'
  /api/v1/CustomerTenants:
    get:
      tags:
      - CustomerTenants
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ProgramId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ConsumerId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Domain
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: DomainPrefix
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: CustomerTenantType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CustomerTenantType'
      - name: InvoiceProfileId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTenant'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTenant'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTenant'
    post:
      tags:
      - CustomerTenants
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
  /api/v1/CustomerTenants/{id}:
    get:
      tags:
      - CustomerTenants
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerTenant'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTenant'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerTenant'
    put:
      tags:
      - CustomerTenants
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
    delete:
      tags:
      - CustomerTenants
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/CustomerTenants/{id}/detailed:
    get:
      tags:
      - CustomerTenants
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
  /api/v1/CustomerTenants/existing:
    post:
      tags:
      - CustomerTenants
      parameters:
      - name: syncFromPublisher
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerTenantDetailed'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerTenantDetailed'
  /api/v1/CustomerTenants/{customerTenantId}/azurePlan:
    get:
      tags:
      - CustomerTenants
      parameters:
      - name: customerTenantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzurePlan'
            application/json:
              schema:
                $ref: '#/components/schemas/AzurePlan'
            text/json:
              schema:
                $ref: '#/components/schemas/AzurePlan'
  /api/v1/connect/token:
    post:
      tags:
      - CustomerToken
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Token'
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/json:
              schema:
                $ref: '#/components/schemas/Token'
  /api/v1/FacebookOrders/checkout:
    post:
      tags:
      - FacebookOrders
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FacebookOrder'
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/FacebookOrder'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FacebookOrder'
      responses:
        "200":
          description: Success
  /api/v1/GoogleOrders/checkout:
    post:
      tags:
      - GoogleOrders
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GoogleOrder'
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/GoogleOrder'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GoogleOrder'
      responses:
        "200":
          description: Success
  /api/v1/Groupings:
    get:
      tags:
      - Groupings
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: IncludeRemoved
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grouping'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grouping'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grouping'
    post:
      tags:
      - Groupings
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Grouping'
          application/json:
            schema:
              $ref: '#/components/schemas/Grouping'
          text/json:
            schema:
              $ref: '#/components/schemas/Grouping'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Grouping'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Grouping'
            application/json:
              schema:
                $ref: '#/components/schemas/Grouping'
            text/json:
              schema:
                $ref: '#/components/schemas/Grouping'
  /api/v1/Groupings/{id}:
    get:
      tags:
      - Groupings
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Grouping'
            application/json:
              schema:
                $ref: '#/components/schemas/Grouping'
            text/json:
              schema:
                $ref: '#/components/schemas/Grouping'
    put:
      tags:
      - Groupings
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Grouping'
          application/json:
            schema:
              $ref: '#/components/schemas/Grouping'
          text/json:
            schema:
              $ref: '#/components/schemas/Grouping'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Grouping'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Grouping'
            application/json:
              schema:
                $ref: '#/components/schemas/Grouping'
            text/json:
              schema:
                $ref: '#/components/schemas/Grouping'
    delete:
      tags:
      - Groupings
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/InvoiceProfiles:
    get:
      tags:
      - InvoiceProfiles
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceProfile'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceProfile'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceProfile'
    post:
      tags:
      - InvoiceProfiles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
  /api/v1/InvoiceProfiles/{id}:
    get:
      tags:
      - InvoiceProfiles
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
    put:
      tags:
      - InvoiceProfiles
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InvoiceProfile'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceProfile'
    delete:
      tags:
      - InvoiceProfiles
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/ManagementLinks:
    get:
      tags:
      - ManagementLinks
      parameters:
      - name: SubscriptionIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: ResellerCustomerIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLink'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLink'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLink'
  /api/v1/ManagementLinks/grouped:
    get:
      tags:
      - ManagementLinks
      parameters:
      - name: SubscriptionIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: ResellerCustomerIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLinkGrouped'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLinkGrouped'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementLinkGrouped'
  /api/v1/Me:
    get:
      tags:
      - Me
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Me'
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
            text/json:
              schema:
                $ref: '#/components/schemas/Me'
  /api/v1/OrganizationAccess/grant:
    get:
      tags:
      - OrganizationAccess
      parameters:
      - name: userId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: organizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10000
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
  /api/v1/OrganizationAccess:
    get:
      tags:
      - OrganizationAccess
      parameters:
      - name: userId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: organizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10000
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
    put:
      tags:
      - OrganizationAccess
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/OrganizationAccess'
          application/json:
            schema:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/OrganizationAccess'
          text/json:
            schema:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/OrganizationAccess'
          application/*+json:
            schema:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/OrganizationAccess'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAccess'
  /api/v1/Organizations:
    get:
      tags:
      - Organizations
      parameters:
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /api/v1/Organizations/{id}:
    get:
      tags:
      - Organizations
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /api/v1/Organizations/{organizationId}/salescontact:
    get:
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationSalesContact'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSalesContact'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationSalesContact'
  /api/v1/Organizations/HasAccess/{id}:
    get:
      tags:
      - Organizations
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/Ping:
    get:
      tags:
      - Ping
      responses:
        "200":
          description: Success
  /api/v1/ProductContainers:
    get:
      tags:
      - ProductContainers
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ActiveDraft
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ProgramId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Year
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Month
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: UserId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: SentByUserId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: Type
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProductContainerType'
      - name: Category
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProductContainerCategory'
      - name: From
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: To
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: IncludeRemoved
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: IncludeSubsidiaries
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductContainer'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductContainer'
  /api/v1/ProductContainers/{id}:
    get:
      tags:
      - ProductContainers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
    put:
      tags:
      - ProductContainers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: requireEulaAnalysis
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
          default: false
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductContainer'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductContainer'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductContainer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductContainer'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
    delete:
      tags:
      - ProductContainers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/ProductContainers/rowissues/{id}:
    get:
      tags:
      - ProductContainers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
  /api/v1/ProductContainers/{productContainerId}/row/{productRowId}:
    patch:
      tags:
      - ProductContainers
      parameters:
      - name: productContainerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: productRowId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductRowPatch'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRowPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductRowPatch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductRowPatch'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
  /api/v1/ProductContainers/reportbymonth:
    post:
      tags:
      - ProductContainers
      parameters:
      - name: year
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: month
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: programId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: organizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: copyLast
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
  /api/v1/ProductContainers/getorcreateshoppingcart:
    get:
      tags:
      - ProductContainers
      parameters:
      - name: organizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductContainer'
  /api/v1/Programs:
    get:
      tags:
      - Programs
      parameters:
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ProgramType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProgramType'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program'
  /api/v1/Programs/{id}:
    get:
      tags:
      - Programs
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Program'
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
            text/json:
              schema:
                $ref: '#/components/schemas/Program'
  /api/v1/Publishers:
    get:
      tags:
      - Publishers
      parameters:
      - name: Names
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ProgramType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ProgramType'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
  /api/v1/Publishers/{id}:
    get:
      tags:
      - Publishers
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Publisher'
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
            text/json:
              schema:
                $ref: '#/components/schemas/Publisher'
  /api/v1/Regions:
    get:
      tags:
      - Regions
      parameters:
      - name: RegionList
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/RegionList'
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
  /api/v1/Regions/bycode:
    get:
      tags:
      - Regions
      parameters:
      - name: regionCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: regionList
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/RegionList'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Region'
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
            text/json:
              schema:
                $ref: '#/components/schemas/Region'
  /api/v1/ResellerSalesPrices:
    get:
      tags:
      - ResellerSalesPrices
      parameters:
      - name: Type
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceType'
      - name: ObjectId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ObjectType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceObjectType'
      - name: FromDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResellerSalesPrice'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResellerSalesPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResellerSalesPrice'
    post:
      tags:
      - ResellerSalesPrices
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            application/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
    delete:
      tags:
      - ResellerSalesPrices
      parameters:
      - name: Type
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceType'
      - name: ObjectId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ObjectType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceObjectType'
      - name: FromDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: Success
  /api/v1/ResellerSalesPrices/current:
    get:
      tags:
      - ResellerSalesPrices
      parameters:
      - name: Type
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceType'
      - name: ObjectId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: ObjectType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ResellerSalesPriceObjectType'
      - name: FromDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            application/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
  /api/v1/ResellerSalesPrices/{oldFromDate}:
    put:
      tags:
      - ResellerSalesPrices
      parameters:
      - name: oldFromDate
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPrice'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            application/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ResellerSalesPrice'
  /api/v1/ResellerSalesPrices/toggle:
    post:
      tags:
      - ResellerSalesPrices
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPriceToggle'
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPriceToggle'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPriceToggle'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResellerSalesPriceToggle'
      responses:
        "200":
          description: Success
  /api/v1/Secrets:
    post:
      tags:
      - Secrets
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Secret'
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
          text/json:
            schema:
              $ref: '#/components/schemas/Secret'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Secret'
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
            text/json:
              schema:
                $ref: '#/components/schemas/Secret'
    delete:
      tags:
      - Secrets
      parameters:
      - name: clientId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: secretId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/Subscriptions:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: CustomerTenantId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PublisherId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Refresh
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          deprecated: true
      - name: Statuses
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SubscriptionStatus'
      - name: IsTrial
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: RegisteredForReservedInstance
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SubscriptionSortBy'
      - name: SortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
    post:
      tags:
      - Subscriptions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
  /api/v1/Subscriptions/{id}:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
    put:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetailed'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
  /api/v1/Subscriptions/{subscriptionId}/conversions:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionConversion'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionConversion'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionConversion'
    post:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionConversion'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionConversion'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionConversion'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionConversion'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetailed'
  /api/v1/Subscriptions/{id}/activationlink:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ActivationLink'
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationLink'
            text/json:
              schema:
                $ref: '#/components/schemas/ActivationLink'
  /api/v1/Subscriptions/{reservedInstance}/subscriptionId/{id}:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reservedInstance
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  type: boolean
            text/json:
              schema:
                type: array
                items:
                  type: boolean
    post:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reservedInstance
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/Subscriptions/{id}/transition-eligibilities/{eligibilityType}:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: eligibilityType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionEligibility'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionEligibility'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionEligibility'
  /api/v1/Subscriptions/{id}/transitions:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionResponse'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionTransitionResponse'
  /api/v1/Subscriptions/{id}/transition:
    post:
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionTransition'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionTransition'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionTransition'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionTransition'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionTransitionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTransitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTransitionResponse'
  /api/v1/Subscriptions/subscriptionpricetypes:
    get:
      tags:
      - Subscriptions
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectReference'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectReference'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectReference'
  /api/v1/Subscriptions/{subscriptionId}/tags:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionTags'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTags'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTags'
    post:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionTags'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionTags'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionTags'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionTags'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
    delete:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
  /api/v1/Subscriptions/{subscriptionId}/addon-offers:
    get:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionAddOnOffer'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionAddOnOffer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionAddOnOffer'
  /api/v1/Subscriptions/{subscriptionId}/addons:
    post:
      tags:
      - Subscriptions
      parameters:
      - name: subscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostSubscriptionAddOn'
          application/json:
            schema:
              $ref: '#/components/schemas/PostSubscriptionAddOn'
          text/json:
            schema:
              $ref: '#/components/schemas/PostSubscriptionAddOn'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostSubscriptionAddOn'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/UsageCost/organization/{organizationId}:
    get:
      tags:
      - UsageCost
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: from
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUsageCost'
  /api/v1/UsageCost/getForSubscription:
    post:
      tags:
      - UsageCost
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionUsageCost'
  /api/v1/UsageCost/getForCategory:
    post:
      tags:
      - UsageCost
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CategoryUsageCostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUsageCostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryUsageCostRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryUsageCostRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryUsageCost'
  /api/v1/UsageCost/getForSubcategory:
    post:
      tags:
      - UsageCost
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubcategoryUsageCostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryUsageCostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SubcategoryUsageCostRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubcategoryUsageCostRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryUsageCost'
  /api/v1/UsageCost/getForSubscription/resourceGroups:
    post:
      tags:
      - UsageCost
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageCostRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResourceGroupUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResourceGroupUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResourceGroupUsageCost'
  /api/v1/UsageCost/getForResourceGroup:
    post:
      tags:
      - UsageCost
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResourceGroupUsageCostRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupUsageCostRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupUsageCostRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResourceGroupUsageCostRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupUsageCost'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupUsageCost'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupUsageCost'
  /api/v1/Users:
    get:
      tags:
      - Users
      parameters:
      - name: Search
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: OrganizationId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Role
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/UserRole'
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - Users
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/Users/{id}:
    get:
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/v1/Users/user:
    get:
      tags:
      - Users
      parameters:
      - name: userName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/Users/{id}/changepassword:
    put:
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          text/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
                x-content-type: text/plain
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
components:
  schemas:
    ChangeTypeEnum:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    ActivityLogItem:
      type: object
      properties:
        entity:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        changedBy:
          type: string
          nullable: true
        changedDate:
          type: string
          format: date-time
        changedColumn:
          type: string
          nullable: true
        changedFrom:
          type: string
          nullable: true
        changedTo:
          type: string
          nullable: true
        customValues:
          type: object
          additionalProperties:
            type: string
          nullable: true
        changeType:
          $ref: '#/components/schemas/ChangeTypeEnum'
      additionalProperties: false
      example:
        changedDate: 2000-01-23T04:56:07.000+00:00
        changedTo: changedTo
        changedColumn: changedColumn
        changedBy: changedBy
        changeType: 6
        changedFrom: changedFrom
        id: 0
        entity: entity
        customValues:
          key: customValues
    AddressType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    ObjectReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        id: 6
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        organization:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
          nullable: true
        completeAddress:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        primary:
          type: boolean
        addressType:
          $ref: '#/components/schemas/AddressType'
      additionalProperties: false
      example:
        zipCode: zipCode
        city: city
        street: street
        countryCode: countryCode
        addressType: 1
        organization:
          name: name
          id: 6
        name: name
        county: county
        id: 0
        state: state
        completeAddress: completeAddress
        primary: true
    AgreementType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
    SortOrder:
      type: integer
      format: int32
      enum:
      - 0
      - 1
    ProductTypeDto:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
    ProductReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        partNumber:
          type: string
          nullable: true
        publisherProductId:
          type: string
          nullable: true
        itemLegalName:
          type: string
          nullable: true
        itemName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        itemName: itemName
        itemLegalName: itemLegalName
        publisherProductId: publisherProductId
        partNumber: partNumber
        id: 1
    MinimumCommitmentLight:
      type: object
      properties:
        id:
          type: integer
          format: int32
        months:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        months: 5
        name: name
        id: 5
    ProductVariant:
      type: object
      properties:
        id:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/ProductReference'
        partNumber:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        program:
          $ref: '#/components/schemas/ObjectReference'
        productFamily:
          $ref: '#/components/schemas/ObjectReference'
        language:
          $ref: '#/components/schemas/ObjectReference'
        level:
          $ref: '#/components/schemas/ObjectReference'
        productType:
          $ref: '#/components/schemas/ObjectReference'
        pool:
          $ref: '#/components/schemas/ObjectReference'
        licenseType:
          $ref: '#/components/schemas/ObjectReference'
        licenseAgreementType:
          $ref: '#/components/schemas/ObjectReference'
        operatingSystem:
          $ref: '#/components/schemas/ObjectReference'
        offering:
          $ref: '#/components/schemas/ObjectReference'
        minimumCommitment:
          $ref: '#/components/schemas/MinimumCommitmentLight'
        unitCount:
          type: integer
          format: int32
        version:
          type: string
          nullable: true
        purchaseUnit:
          type: string
          nullable: true
        purchasePeriod:
          type: string
          nullable: true
        addDate:
          type: string
          format: date-time
        deleteDate:
          type: string
          format: date-time
        productCategory:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        isTrial:
          type: boolean
        defaultBillingCycleId:
          type: integer
          format: int32
        availableBillingCycleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
        minimumQuantity:
          type: number
          format: double
      additionalProperties: false
      example:
        productFamily: null
        language: null
        program: null
        minimumCommitment:
          months: 5
          name: name
          id: 5
        isTrial: true
        operatingSystem: null
        productName: productName
        productCategory: productCategory
        licenseType: null
        id: 6
        purchasePeriod: purchasePeriod
        minimumQuantity: 3.616076749251911
        productType: null
        deleteDate: 2000-01-23T04:56:07.000+00:00
        product:
          itemName: itemName
          itemLegalName: itemLegalName
          publisherProductId: publisherProductId
          partNumber: partNumber
          id: 1
        level: null
        unitCount: 2
        pool: null
        version: version
        addDate: 2000-01-23T04:56:07.000+00:00
        purchaseUnit: purchaseUnit
        defaultBillingCycleId: 7
        offering: null
        publisher:
          name: name
          id: 6
        licenseAgreementType: null
        partNumber: partNumber
        attributes:
          key: {}
        region: region
        availableBillingCycleIds:
        - 9
        - 9
    Price:
      type: object
      properties:
        value:
          type: number
          format: double
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        value: 4.145608029883936
        currencyCode: currencyCode
    PriceCalculationType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    ProductInformation:
      type: object
      properties:
        externalProductId:
          type: integer
          format: int32
        cultureCode:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        learnMoreLink:
          type: string
          nullable: true
      additionalProperties: false
      example:
        cultureCode: cultureCode
        description: description
        learnMoreLink: learnMoreLink
        externalProductId: 1
    AgreementProduct:
      type: object
      properties:
        uniqueId:
          type: string
          nullable: true
        productType:
          $ref: '#/components/schemas/ProductTypeDto'
        productVariant:
          $ref: '#/components/schemas/ProductVariant'
        agreement:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
          nullable: true
        priceId:
          type: integer
          format: int32
        recommendedRetailPrice:
          $ref: '#/components/schemas/Price'
        salesPrice:
          $ref: '#/components/schemas/Price'
        alternativeSalesPrice:
          $ref: '#/components/schemas/Price'
        priceListName:
          type: string
          nullable: true
        monthMultiplier:
          type: integer
          format: int32
        priceCalculationType:
          $ref: '#/components/schemas/PriceCalculationType'
        agreementType:
          $ref: '#/components/schemas/AgreementType'
        productInformation:
          $ref: '#/components/schemas/ProductInformation'
        minimumQuantity:
          type: integer
          format: int32
        maximumQuantity:
          type: integer
          format: int32
          nullable: true
        catalog:
          $ref: '#/components/schemas/ObjectReference'
      additionalProperties: false
      example:
        agreementType: 1
        agreement: null
        monthMultiplier: 7
        catalog: null
        salesPrice: null
        productInformation:
          cultureCode: cultureCode
          description: description
          learnMoreLink: learnMoreLink
          externalProductId: 1
        priceCalculationType: 1
        alternativeSalesPrice: null
        recommendedRetailPrice:
          value: 4.145608029883936
          currencyCode: currencyCode
        productVariant:
          productFamily: null
          language: null
          program: null
          minimumCommitment:
            months: 5
            name: name
            id: 5
          isTrial: true
          operatingSystem: null
          productName: productName
          productCategory: productCategory
          licenseType: null
          id: 6
          purchasePeriod: purchasePeriod
          minimumQuantity: 3.616076749251911
          productType: null
          deleteDate: 2000-01-23T04:56:07.000+00:00
          product:
            itemName: itemName
            itemLegalName: itemLegalName
            publisherProductId: publisherProductId
            partNumber: partNumber
            id: 1
          level: null
          unitCount: 2
          pool: null
          version: version
          addDate: 2000-01-23T04:56:07.000+00:00
          purchaseUnit: purchaseUnit
          defaultBillingCycleId: 7
          offering: null
          publisher:
            name: name
            id: 6
          licenseAgreementType: null
          partNumber: partNumber
          attributes:
            key: {}
          region: region
          availableBillingCycleIds:
          - 9
          - 9
        name: name
        priceId: 2
        priceListName: priceListName
        minimumQuantity: 6
        uniqueId: uniqueId
        productType: 0
        maximumQuantity: 7
    AgreementProductsSubFilter:
      type: object
      properties:
        partNumbers:
          type: array
          nullable: true
          items:
            type: string
        publisherIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        publisherNames:
          type: array
          nullable: true
          items:
            type: string
        poolNames:
          type: array
          nullable: true
          items:
            type: string
        operatingSystemNames:
          type: array
          nullable: true
          items:
            type: string
        levelNames:
          type: array
          nullable: true
          items:
            type: string
        languageNames:
          type: array
          nullable: true
          items:
            type: string
        licenseAgreementTypeNames:
          type: array
          nullable: true
          items:
            type: string
        licenseTypeNames:
          type: array
          nullable: true
          items:
            type: string
        productFamilyNames:
          type: array
          nullable: true
          items:
            type: string
        productTypeNames:
          type: array
          nullable: true
          items:
            type: string
        programNames:
          type: array
          nullable: true
          items:
            type: string
        offeringNames:
          type: array
          nullable: true
          items:
            type: string
        purchasePeriodNames:
          type: array
          nullable: true
          items:
            type: string
        purchaseUnitNames:
          type: array
          nullable: true
          items:
            type: string
        versionNames:
          type: array
          nullable: true
          items:
            type: string
        regionNames:
          type: array
          nullable: true
          items:
            type: string
        productCategoryNames:
          type: array
          nullable: true
          items:
            type: string
        catalogNames:
          type: array
          nullable: true
          items:
            type: string
        billingCycles:
          type: array
          nullable: true
          items:
            type: string
      additionalProperties: false
    AgreementProductFilter:
      type: object
      properties:
        agreementTypeIds:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AgreementType'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        search:
          type: string
          nullable: true
        priceListId:
          type: integer
          format: int32
        organizationId:
          type: integer
          format: int32
        customerTenantId:
          type: integer
          format: int32
        agreementId:
          type: integer
          format: int32
        isTrial:
          type: boolean
          nullable: true
        agreementIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        searchDate:
          type: string
          format: date-time
          nullable: true
        include:
          $ref: '#/components/schemas/AgreementProductsSubFilter'
        exclude:
          $ref: '#/components/schemas/AgreementProductsSubFilter'
        sortKey:
          type: string
          nullable: true
        includeProductInformation:
          type: boolean
        sortOrder:
          $ref: '#/components/schemas/SortOrder'
      additionalProperties: false
    BillingCycleEnum:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 7
      - 8
      - 9
    ObjectReferenceDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        id: 0
    AgreementIdentityReferenceDto:
      type: object
      properties:
        agreementNumber:
          type: string
          nullable: true
        commitmentLevel:
          type: number
          format: double
        isCustomCommitment:
          type: boolean
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        commitmentLevel: 6.027456183070403
        name: name
        id: 1
        agreementNumber: agreementNumber
        isCustomCommitment: true
    AgreementReportStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
      - 6
    AgreementReport:
      type: object
      properties:
        productContainer:
          $ref: '#/components/schemas/ObjectReferenceDto'
        agreement:
          $ref: '#/components/schemas/AgreementIdentityReferenceDto'
        status:
          $ref: '#/components/schemas/AgreementReportStatus'
        hasValidAgreementTerm:
          type: boolean
      additionalProperties: false
      example:
        agreement:
          commitmentLevel: 6.027456183070403
          name: name
          id: 1
          agreementNumber: agreementNumber
          isCustomCommitment: true
        productContainer:
          name: name
          id: 0
        hasValidAgreementTerm: true
        status: 5
    AgreementStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
    Agreement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
          nullable: true
        salesPriceCurrencyCode:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        disabled:
          type: boolean
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        program:
          $ref: '#/components/schemas/ObjectReference'
        number:
          type: string
          nullable: true
        customerNumber:
          type: string
          nullable: true
        masterAgreement:
          type: string
          nullable: true
        hasTerms:
          type: boolean
        agreementType:
          $ref: '#/components/schemas/AgreementType'
        parentAgreementId:
          type: integer
          format: int32
          nullable: true
        commitmentLevel:
          type: number
          format: double
        consumerId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        agreementType: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        parentAgreementId: 1
        salesPriceCurrencyCode: salesPriceCurrencyCode
        consumerId: 5
        program: null
        customerNumber: customerNumber
        hasTerms: true
        number: number
        commitmentLevel: 5.962133916683182
        masterAgreement: masterAgreement
        organization:
          name: name
          id: 6
        name: name
        publisher: null
        disabled: true
        id: 0
        startDate: 2000-01-23T04:56:07.000+00:00
    AssetType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    AssetStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 15
    AssetSortBy:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    AssetScope:
      type: integer
      format: int32
      enum:
      - 1
      - 2
    BillingCycleType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    SubscriptionLite:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        publisherSubscriptionId:
          type: string
          nullable: true
        resellerCustomerName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        resellerCustomerName: resellerCustomerName
        name: name
        id: 4
        publisherSubscriptionId: publisherSubscriptionId
    SalesPriceType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - -1
    AssetTags:
      type: object
      properties:
        assetId:
          type: integer
          format: int32
        costCenter:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        project:
          type: string
          nullable: true
        custom:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
      additionalProperties: false
      example:
        owner: owner
        assetId: 6
        costCenter: costCenter
        custom: custom
        project: project
        department: department
    Asset:
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/AssetStatus'
        externalOrderId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        externalProductId:
          type: string
          nullable: true
        externalSkuId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
          nullable: true
        resellerCustomerId:
          type: integer
          format: int32
        scope:
          $ref: '#/components/schemas/AssetScope'
        assetType:
          $ref: '#/components/schemas/AssetType'
        billingCycle:
          $ref: '#/components/schemas/BillingCycleType'
        publisherId:
          type: integer
          format: int32
        programId:
          type: integer
          format: int32
        reservationId:
          type: string
          nullable: true
        reservationUsedInSubscriptionId:
          type: integer
          format: int32
          nullable: true
        reservationUsedInSubscription:
          $ref: '#/components/schemas/SubscriptionLite'
        purchaseCurrency:
          type: string
          nullable: true
        purchasePrice:
          type: number
          format: double
        salesCurrency:
          type: string
          nullable: true
        salesPrice:
          type: number
          format: double
        createdDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        changedBy:
          type: string
          nullable: true
        resellerPriceType:
          $ref: '#/components/schemas/SalesPriceType'
        resellerPriceTypeValue:
          type: number
          format: double
        reservedInstanceArtifactResourceId:
          type: string
          nullable: true
        purchaseDate:
          type: string
          format: date-time
          nullable: true
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        tags:
          $ref: '#/components/schemas/AssetTags'
      additionalProperties: false
      example:
        resellerCustomerId: 5
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        salesPrice: 1.2315135367772556
        purchasePrice: 7.386281948385884
        purchaseCurrency: purchaseCurrency
        reservedInstanceArtifactResourceId: reservedInstanceArtifactResourceId
        publisherId: 9
        reservationId: reservationId
        externalSkuId: externalSkuId
        reservationUsedInSubscriptionId: 2
        changedBy: changedBy
        scope: 5
        id: 0
        expirationDate: 2000-01-23T04:56:07.000+00:00
        quantity: 1
        externalOrderId: externalOrderId
        assetType: 2
        tags:
          owner: owner
          assetId: 6
          costCenter: costCenter
          custom: custom
          project: project
          department: department
        createdDate: 2000-01-23T04:56:07.000+00:00
        reservationUsedInSubscription:
          resellerCustomerName: resellerCustomerName
          name: name
          id: 4
          publisherSubscriptionId: publisherSubscriptionId
        billingCycle: 7
        resellerPriceTypeValue: 1.4894159098541704
        name: name
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        invoiceProfile:
          name: name
          id: 6
        salesCurrency: salesCurrency
        resellerPriceType: 1
        externalProductId: externalProductId
        startDate: 2000-01-23T04:56:07.000+00:00
        programId: 3
        status: 6
    AssetOrderError:
      type: object
      properties:
        orderGroupId:
          type: string
          nullable: true
        code:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      additionalProperties: false
      example:
        code: 1
        orderGroupId: orderGroupId
        description: description
    AssetOrderLineError:
      type: object
      properties:
        reasonCode:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
      example:
        description: description
        reasonCode: reasonCode
        properties:
          key: properties
    AssetOrderLine:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        subscriptionId:
          type: integer
          format: int32
          nullable: true
        armRegionName:
          type: string
          nullable: true
        skuId:
          type: string
          nullable: true
        productVariantId:
          type: integer
          format: int32
          nullable: true
        quantity:
          type: integer
          format: int32
        billingCycle:
          $ref: '#/components/schemas/BillingCycleType'
        provisioningContext:
          type: object
          additionalProperties:
            type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AssetType'
        requiresInventoryCheck:
          type: boolean
        catalogItemId:
          type: string
          nullable: true
        termDuration:
          type: string
          nullable: true
        scope:
          $ref: '#/components/schemas/AssetScope'
        resellerPriceType:
          $ref: '#/components/schemas/SalesPriceType'
        resellerPriceTypeValue:
          type: number
          format: double
        isTrial:
          type: boolean
        name:
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/AssetTags'
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AssetOrderLineError'
      additionalProperties: false
      example:
        quantity: 2
        productId: productId
        productVariantId: 5
        type: 9
        isTrial: true
        termDuration: termDuration
        tags:
          owner: owner
          assetId: 6
          costCenter: costCenter
          custom: custom
          project: project
          department: department
        armRegionName: armRegionName
        catalogItemId: catalogItemId
        requiresInventoryCheck: true
        billingCycle: 7
        scope: 3
        resellerPriceTypeValue: 4.145608029883936
        name: name
        resellerPriceType: 2
        subscriptionId: 5
        provisioningContext:
          key: provisioningContext
        skuId: skuId
        errors:
        - description: description
          reasonCode: reasonCode
          properties:
            key: properties
        - description: description
          reasonCode: reasonCode
          properties:
            key: properties
    AssetOrder:
      type: object
      properties:
        externalOrderId:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        resellerCustomerId:
          type: integer
          format: int32
        adminAccount:
          type: string
          nullable: true
        notificationEmail:
          type: string
          nullable: true
        invoiceProfileId:
          type: integer
          format: int32
          nullable: true
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AssetOrderError'
        orderLines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AssetOrderLine'
      additionalProperties: false
      example:
        resellerCustomerId: 0
        orderLines:
        - quantity: 2
          productId: productId
          productVariantId: 5
          type: 9
          isTrial: true
          termDuration: termDuration
          tags:
            owner: owner
            assetId: 6
            costCenter: costCenter
            custom: custom
            project: project
            department: department
          armRegionName: armRegionName
          catalogItemId: catalogItemId
          requiresInventoryCheck: true
          billingCycle: 7
          scope: 3
          resellerPriceTypeValue: 4.145608029883936
          name: name
          resellerPriceType: 2
          subscriptionId: 5
          provisioningContext:
            key: provisioningContext
          skuId: skuId
          errors:
          - description: description
            reasonCode: reasonCode
            properties:
              key: properties
          - description: description
            reasonCode: reasonCode
            properties:
              key: properties
        - quantity: 2
          productId: productId
          productVariantId: 5
          type: 9
          isTrial: true
          termDuration: termDuration
          tags:
            owner: owner
            assetId: 6
            costCenter: costCenter
            custom: custom
            project: project
            department: department
          armRegionName: armRegionName
          catalogItemId: catalogItemId
          requiresInventoryCheck: true
          billingCycle: 7
          scope: 3
          resellerPriceTypeValue: 4.145608029883936
          name: name
          resellerPriceType: 2
          subscriptionId: 5
          provisioningContext:
            key: provisioningContext
          skuId: skuId
          errors:
          - description: description
            reasonCode: reasonCode
            properties:
              key: properties
          - description: description
            reasonCode: reasonCode
            properties:
              key: properties
        invoiceProfileId: 6
        countryCode: countryCode
        adminAccount: adminAccount
        externalOrderId: externalOrderId
        notificationEmail: notificationEmail
        errors:
        - code: 1
          orderGroupId: orderGroupId
          description: description
        - code: 1
          orderGroupId: orderGroupId
          description: description
    CustomerTenantType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    EntityStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        parentId:
          type: integer
          format: int32
        crayonCompanyName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        crayonCompanyName: crayonCompanyName
        id: 5
        accountNumber: accountNumber
        parentId: 5
    SubscriptionTags:
      type: object
      properties:
        subscriptionId:
          type: integer
          format: int32
        costCenter:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        project:
          type: string
          nullable: true
        custom:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        createdDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
      additionalProperties: false
      example:
        owner: owner
        createdDate: 2000-01-23T04:56:07.000+00:00
        costCenter: costCenter
        custom: custom
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        project: project
        subscriptionId: 2
        department: department
    AwsMasterAccountStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
    AwsAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        externalPublisherCustomerId:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        customerTenantType:
          $ref: '#/components/schemas/CustomerTenantType'
        entityStatus:
          $ref: '#/components/schemas/EntityStatus'
        organization:
          $ref: '#/components/schemas/Organization'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        isActivated:
          type: boolean
        tags:
          $ref: '#/components/schemas/SubscriptionTags'
        payerAccountId:
          type: string
          nullable: true
        awsAccountName:
          type: string
          nullable: true
        masterAccountStatus:
          $ref: '#/components/schemas/AwsMasterAccountStatus'
      additionalProperties: false
      example:
        masterAccountStatus: 7
        isActivated: true
        payerAccountId: payerAccountId
        tags:
          owner: owner
          createdDate: 2000-01-23T04:56:07.000+00:00
          costCenter: costCenter
          custom: custom
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          project: project
          subscriptionId: 2
          department: department
        reference: reference
        externalPublisherCustomerId: externalPublisherCustomerId
        entityStatus: 1
        organization:
          name: name
          crayonCompanyName: crayonCompanyName
          id: 5
          accountNumber: accountNumber
          parentId: 5
        name: name
        invoiceProfile: null
        publisher:
          name: name
          id: 6
        customerTenantType: 6
        id: 0
        email: email
        awsAccountName: awsAccountName
    SubscriptionStatus:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 30
      - 31
      - 32
      - 64
    CustomerTenantReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
      additionalProperties: false
      example:
        id: 1
    AzurePlan:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        publisherSubscriptionId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        registeredForReservedInstance:
          type: boolean
        organization:
          $ref: '#/components/schemas/ObjectReference'
        customerTenant:
          $ref: '#/components/schemas/CustomerTenantReference'
      additionalProperties: false
      example:
        organization:
          name: name
          id: 6
        name: name
        id: 0
        publisherSubscriptionId: publisherSubscriptionId
        registeredForReservedInstance: true
        status: 6
        customerTenant:
          id: 1
    AzureSubscriptionTags:
      type: object
      properties:
        costCenter:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        project:
          type: string
          nullable: true
        custom:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
      additionalProperties: false
      example:
        owner: owner
        costCenter: costCenter
        custom: custom
        project: project
        department: department
    AzureSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        azurePlanId:
          type: integer
          format: int32
        publisherSubscriptionId:
          type: string
          nullable: true
        friendlyName:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        tags:
          $ref: '#/components/schemas/AzureSubscriptionTags'
      additionalProperties: false
      example:
        invoiceProfile:
          name: name
          id: 6
        id: 0
        publisherSubscriptionId: publisherSubscriptionId
        azurePlanId: 6
        friendlyName: friendlyName
        status: status
        tags:
          owner: owner
          costCenter: costCenter
          custom: custom
          project: project
          department: department
    CreateAzureSubscriptionRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    PutAzureSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        tags:
          $ref: '#/components/schemas/AzureSubscriptionTags'
      additionalProperties: false
    AzureSubscriptionAssignAdmin:
      type: object
      properties:
        azurePlanId:
          type: integer
          format: int32
          nullable: true
        azureSubscriptionId:
          type: integer
          format: int32
          nullable: true
        adminEmail:
          type: string
          nullable: true
      additionalProperties: false
    AzureSubscriptionUpdated:
      type: object
      properties:
        azureSubscriptionId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        azureSubscriptionId: azureSubscriptionId
    AzureSubscriptionRename:
      type: object
      properties:
        azurePlanId:
          type: integer
          format: int32
          nullable: true
        azureSubscriptionId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    BillingCycle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        id: 0
    ProvisionType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    BillingStatement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        totalSalesPrice:
          $ref: '#/components/schemas/Price'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        provisionType:
          $ref: '#/components/schemas/ProvisionType'
        orderId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        orderId: orderId
        provisionType: 6
        organization: null
        invoiceProfile:
          name: name
          id: 6
        id: 0
        totalSalesPrice:
          value: 4.145608029883936
          currencyCode: currencyCode
        startDate: 2000-01-23T04:56:07.000+00:00
    GroupedBillingStatement:
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        totalSalesPrice:
          $ref: '#/components/schemas/Price'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        provisionType:
          $ref: '#/components/schemas/ProvisionType'
        orderId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        orderId: orderId
        provisionType: 1
        groupId: 0
        organization: null
        invoiceProfile:
          name: name
          id: 6
        id: 6
        totalSalesPrice:
          value: 4.145608029883936
          currencyCode: currencyCode
        startDate: 2000-01-23T04:56:07.000+00:00
    BlogItem:
      type: object
      properties:
        title:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        link:
          type: string
          format: uri
          nullable: true
        publicationDate:
          type: string
          format: date-time
      additionalProperties: false
      example:
        image: image
        author: author
        link: http://example.com/aeiou
        description: description
        title: title
        publicationDate: 2000-01-23T04:56:07.000+00:00
    Secret:
      type: object
      properties:
        id:
          type: integer
          format: int32
        clientId:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expiration:
          type: string
          format: date-time
          nullable: true
        timeStamp:
          type: string
          format: date-time
      additionalProperties: false
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        description: description
        expiration: 2000-01-23T04:56:07.000+00:00
        id: 0
        value: value
    Flow:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 4
      - 9999
    Client:
      type: object
      properties:
        clientId:
          type: string
          nullable: true
        clientName:
          type: string
          nullable: true
        clientUri:
          type: string
          format: uri
          nullable: true
        enabled:
          type: boolean
        clientSecrets:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Secret'
        redirectUris:
          type: array
          nullable: true
          items:
            type: string
            format: uri
        timeStamp:
          type: string
          format: date-time
        flow:
          $ref: '#/components/schemas/Flow'
      additionalProperties: false
      example:
        clientUri: http://example.com/aeiou
        timeStamp: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        clientSecrets:
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          clientId: clientId
          description: description
          expiration: 2000-01-23T04:56:07.000+00:00
          id: 0
          value: value
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          clientId: clientId
          description: description
          expiration: 2000-01-23T04:56:07.000+00:00
          id: 0
          value: value
        clientName: clientName
        redirectUris:
        - http://example.com/aeiou
        - http://example.com/aeiou
        enabled: true
        flow: 6
    Consumer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        organization:
          $ref: '#/components/schemas/ObjectReference'
      additionalProperties: false
      example:
        organization:
          name: name
          id: 6
        name: name
        id: 0
    CustomerTenantContact:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        email: email
    CrayonAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        externalPublisherCustomerId:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        customerTenantType:
          $ref: '#/components/schemas/CustomerTenantType'
        entityStatus:
          $ref: '#/components/schemas/EntityStatus'
        organization:
          $ref: '#/components/schemas/Organization'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        isActivated:
          type: boolean
        contact:
          $ref: '#/components/schemas/CustomerTenantContact'
        program:
          $ref: '#/components/schemas/ObjectReference'
        resellerMarkup:
          type: number
          format: double
      additionalProperties: false
      example:
        isActivated: true
        program: null
        reference: reference
        externalPublisherCustomerId: externalPublisherCustomerId
        entityStatus: 1
        organization:
          name: name
          crayonCompanyName: crayonCompanyName
          id: 5
          accountNumber: accountNumber
          parentId: 5
        contact:
          firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          email: email
        name: name
        invoiceProfile: null
        publisher:
          name: name
          id: 6
        customerTenantType: 6
        id: 0
        resellerMarkup: 5.962133916683182
        email: email
    AgreementTypeConsent:
      type: integer
      format: int32
      enum:
      - 0
      - 1
    ServiceAccountAgreement:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        dateAgreed:
          type: string
          format: date-time
        agreementType:
          $ref: '#/components/schemas/AgreementTypeConsent'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        dateAgreed: 2000-01-23T04:56:07.000+00:00
        agreementType: 0
        phoneNumber: phoneNumber
        email: email
    SubscriptionPriceType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    CustomerTenantAgreement:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        sameAsPrimaryContact:
          type: boolean
        dateAgreed:
          type: string
          format: date-time
          nullable: true
        accepted:
          type: boolean
        agreementType:
          $ref: '#/components/schemas/AgreementTypeConsent'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        dateAgreed: 2000-01-23T04:56:07.000+00:00
        agreementType: 2
        phoneNumber: phoneNumber
        sameAsPrimaryContact: true
        accepted: true
        email: email
    CustomerTenant:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        program:
          $ref: '#/components/schemas/ObjectReference'
        publisherCustomerId:
          type: string
          nullable: true
        externalPublisherCustomerId:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        domainPrefix:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        customerTenantType:
          $ref: '#/components/schemas/CustomerTenantType'
        entityStatus:
          $ref: '#/components/schemas/EntityStatus'
        organization:
          $ref: '#/components/schemas/Organization'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        consumer:
          $ref: '#/components/schemas/ObjectReference'
        resellerMarkup:
          type: number
          format: double
        defaultSubscriptionPriceType:
          $ref: '#/components/schemas/SubscriptionPriceType'
        agreement:
          $ref: '#/components/schemas/CustomerTenantAgreement'
      additionalProperties: false
      example:
        agreement:
          firstName: firstName
          lastName: lastName
          dateAgreed: 2000-01-23T04:56:07.000+00:00
          agreementType: 2
          phoneNumber: phoneNumber
          sameAsPrimaryContact: true
          accepted: true
          email: email
        program: null
        reference: reference
        externalPublisherCustomerId: externalPublisherCustomerId
        defaultSubscriptionPriceType: 5
        domainPrefix: domainPrefix
        entityStatus: 1
        publisherCustomerId: publisherCustomerId
        domain: domain
        organization:
          name: name
          crayonCompanyName: crayonCompanyName
          id: 5
          accountNumber: accountNumber
          parentId: 5
        name: name
        invoiceProfile: null
        publisher:
          name: name
          id: 6
        customerTenantType: 6
        id: 0
        resellerMarkup: 5.962133916683182
        consumer: null
    CustomerTenantUser:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
      example:
        password: password
        userName: userName
    CustomerTenantAddress:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        addressLine1:
          type: string
          nullable: true
        addressLine2:
          type: string
          nullable: true
        addressLine3:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        city: city
        countryCode: countryCode
        postalCode: postalCode
        addressLine1: addressLine1
        middleName: middleName
        addressLine2: addressLine2
        addressLine3: addressLine3
        countryName: countryName
        region: region
    CustomerTenantProfile:
      type: object
      properties:
        cultureCode:
          type: string
          nullable: true
        languageCode:
          type: string
          nullable: true
        contact:
          $ref: '#/components/schemas/CustomerTenantContact'
        address:
          $ref: '#/components/schemas/CustomerTenantAddress'
        agreement:
          $ref: '#/components/schemas/CustomerTenantAgreement'
      additionalProperties: false
      example:
        cultureCode: cultureCode
        address:
          firstName: firstName
          lastName: lastName
          city: city
          countryCode: countryCode
          postalCode: postalCode
          addressLine1: addressLine1
          middleName: middleName
          addressLine2: addressLine2
          addressLine3: addressLine3
          countryName: countryName
          region: region
        agreement:
          firstName: firstName
          lastName: lastName
          dateAgreed: 2000-01-23T04:56:07.000+00:00
          agreementType: 2
          phoneNumber: phoneNumber
          sameAsPrimaryContact: true
          accepted: true
          email: email
        contact:
          firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          email: email
        languageCode: languageCode
    CustomerTenantCompany:
      type: object
      properties:
        organizationRegistrationNumber:
          type: string
          nullable: true
      additionalProperties: false
      example:
        organizationRegistrationNumber: organizationRegistrationNumber
    CustomerTenantDetailed:
      type: object
      properties:
        tenant:
          $ref: '#/components/schemas/CustomerTenant'
        user:
          $ref: '#/components/schemas/CustomerTenantUser'
        profile:
          $ref: '#/components/schemas/CustomerTenantProfile'
        company:
          $ref: '#/components/schemas/CustomerTenantCompany'
      additionalProperties: false
      example:
        profile:
          cultureCode: cultureCode
          address:
            firstName: firstName
            lastName: lastName
            city: city
            countryCode: countryCode
            postalCode: postalCode
            addressLine1: addressLine1
            middleName: middleName
            addressLine2: addressLine2
            addressLine3: addressLine3
            countryName: countryName
            region: region
          agreement:
            firstName: firstName
            lastName: lastName
            dateAgreed: 2000-01-23T04:56:07.000+00:00
            agreementType: 2
            phoneNumber: phoneNumber
            sameAsPrimaryContact: true
            accepted: true
            email: email
          contact:
            firstName: firstName
            lastName: lastName
            phoneNumber: phoneNumber
            email: email
          languageCode: languageCode
        company:
          organizationRegistrationNumber: organizationRegistrationNumber
        user:
          password: password
          userName: userName
        tenant:
          agreement:
            firstName: firstName
            lastName: lastName
            dateAgreed: 2000-01-23T04:56:07.000+00:00
            agreementType: 2
            phoneNumber: phoneNumber
            sameAsPrimaryContact: true
            accepted: true
            email: email
          program: null
          reference: reference
          externalPublisherCustomerId: externalPublisherCustomerId
          defaultSubscriptionPriceType: 5
          domainPrefix: domainPrefix
          entityStatus: 1
          publisherCustomerId: publisherCustomerId
          domain: domain
          organization:
            name: name
            crayonCompanyName: crayonCompanyName
            id: 5
            accountNumber: accountNumber
            parentId: 5
          name: name
          invoiceProfile: null
          publisher:
            name: name
            id: 6
          customerTenantType: 6
          id: 0
          resellerMarkup: 5.962133916683182
          consumer: null
    Token:
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
        identityToken:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
        expiresIn:
          type: integer
          format: int64
        tokenType:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
      example:
        expiresIn: 0
        identityToken: identityToken
        accessToken: accessToken
        error: error
        tokenType: tokenType
        refreshToken: refreshToken
    FacebookOrder:
      type: object
      properties:
        contactName:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        consumerContactName:
          type: string
          nullable: true
        consumerFullLegalName:
          type: string
          nullable: true
        consumerContactEmail:
          type: string
          nullable: true
        organizationId:
          type: integer
          format: int32
        invoiceProfileId:
          type: integer
          format: int32
        subscriptionStartDate:
          type: string
          format: date-time
        consumerSignupEmail:
          type: string
          nullable: true
      additionalProperties: false
    GoogleOrder:
      type: object
      properties:
        contactName:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        consumerContactName:
          type: string
          nullable: true
        consumerFullLegalName:
          type: string
          nullable: true
        consumerContactEmail:
          type: string
          nullable: true
        organizationId:
          type: integer
          format: int32
        invoiceProfileId:
          type: integer
          format: int32
        subscriptionStartDate:
          type: string
          format: date-time
        domainName:
          type: string
          nullable: true
        consumerCountry:
          type: string
          nullable: true
        consumerStreetAddress:
          type: string
          nullable: true
        consumerCity:
          type: string
          nullable: true
        consumerState:
          type: string
          nullable: true
        consumerZipCode:
          type: string
          nullable: true
        consumerPhoneNumber:
          type: string
          nullable: true
        primaryAdminName:
          type: string
          nullable: true
        primaryAdminUserName:
          type: string
          nullable: true
      additionalProperties: false
    Grouping:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        createdDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        isDisabled:
          type: boolean
        isRemoved:
          type: boolean
        invoiceReference:
          type: string
          nullable: true
      additionalProperties: false
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        isRemoved: true
        invoiceReference: invoiceReference
        organization: null
        name: name
        invoiceProfile:
          name: name
          id: 6
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        id: 0
        isDisabled: true
    AddressData:
      type: object
      properties:
        axAddressId:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        completeAddress:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        zipCode: zipCode
        city: city
        street: street
        countryCode: countryCode
        name: name
        county: county
        state: state
        axAddressId: 5
        completeAddress: completeAddress
    InvoiceProfile:
      type: object
      properties:
        id:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
          nullable: true
        invoiceReference:
          type: string
          nullable: true
        customerReference:
          type: string
          nullable: true
        requisitionNumber:
          type: string
          nullable: true
        invoiceAddressId:
          type: integer
          format: int64
        deliveryAddressId:
          type: integer
          format: int64
          nullable: true
        deliveryAddress:
          $ref: '#/components/schemas/AddressData'
        invoiceAddress:
          $ref: '#/components/schemas/AddressData'
        consumerId:
          type: integer
          format: int32
          nullable: true
        contactPersonId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        deliveryAddressId: 1
        requisitionNumber: requisitionNumber
        invoiceAddressId: 6
        invoiceReference: invoiceReference
        deliveryAddress:
          zipCode: zipCode
          city: city
          street: street
          countryCode: countryCode
          name: name
          county: county
          state: state
          axAddressId: 5
          completeAddress: completeAddress
        contactPersonId: 2
        consumerId: 5
        organization:
          name: name
          id: 6
        customerReference: customerReference
        name: name
        invoiceAddress: null
        id: 0
    ManagementLink:
      type: object
      properties:
        link:
          type: string
          nullable: true
        resellerCustomer:
          $ref: '#/components/schemas/ObjectReference'
        subscription:
          $ref: '#/components/schemas/ObjectReference'
        text:
          type: string
          nullable: true
      additionalProperties: false
      example:
        resellerCustomer:
          name: name
          id: 6
        link: link
        subscription: null
        text: text
    ManagementLinkGrouped:
      type: object
      properties:
        link:
          type: string
          nullable: true
        resellerCustomer:
          $ref: '#/components/schemas/ObjectReference'
        text:
          type: string
          nullable: true
      additionalProperties: false
      example:
        resellerCustomer:
          name: name
          id: 6
        link: link
        text: text
    Me:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        claims:
          type: array
          nullable: true
          items:
            type: string
      additionalProperties: false
      example:
        claims:
        - claims
        - claims
        userName: userName
        userId: userId
        token: token
    AgreementAccess:
      type: object
      properties:
        hasAccess:
          type: boolean
        agreement:
          $ref: '#/components/schemas/Agreement'
      additionalProperties: false
      example:
        agreement:
          agreementType: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          parentAgreementId: 1
          salesPriceCurrencyCode: salesPriceCurrencyCode
          consumerId: 5
          program: null
          customerNumber: customerNumber
          hasTerms: true
          number: number
          commitmentLevel: 5.962133916683182
          masterAgreement: masterAgreement
          organization:
            name: name
            id: 6
          name: name
          publisher: null
          disabled: true
          id: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        hasAccess: true
    UserProfile:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        id: id
        userName: userName
        email: email
    OrganizationAccessRole:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 7
    OrganizationAccess:
      type: object
      properties:
        id:
          type: integer
          format: int32
        allAgreements:
          type: boolean
        agreements:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AgreementAccess'
        organization:
          $ref: '#/components/schemas/Organization'
        user:
          $ref: '#/components/schemas/UserProfile'
        role:
          $ref: '#/components/schemas/OrganizationAccessRole'
        crayonCompanyName:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
      example:
        role: 6
        organization:
          name: name
          crayonCompanyName: crayonCompanyName
          id: 5
          accountNumber: accountNumber
          parentId: 5
        agreements:
        - agreement:
            agreementType: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            parentAgreementId: 1
            salesPriceCurrencyCode: salesPriceCurrencyCode
            consumerId: 5
            program: null
            customerNumber: customerNumber
            hasTerms: true
            number: number
            commitmentLevel: 5.962133916683182
            masterAgreement: masterAgreement
            organization:
              name: name
              id: 6
            name: name
            publisher: null
            disabled: true
            id: 0
            startDate: 2000-01-23T04:56:07.000+00:00
          hasAccess: true
        - agreement:
            agreementType: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            parentAgreementId: 1
            salesPriceCurrencyCode: salesPriceCurrencyCode
            consumerId: 5
            program: null
            customerNumber: customerNumber
            hasTerms: true
            number: number
            commitmentLevel: 5.962133916683182
            masterAgreement: masterAgreement
            organization:
              name: name
              id: 6
            name: name
            publisher: null
            disabled: true
            id: 0
            startDate: 2000-01-23T04:56:07.000+00:00
          hasAccess: true
        crayonCompanyName: crayonCompanyName
        id: 0
        user:
          firstName: firstName
          lastName: lastName
          id: id
          userName: userName
          email: email
        allAgreements: true
        timestamp: 2000-01-23T04:56:07.000+00:00
    OrganizationSalesContact:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
      example:
        phone: phone
        fullName: fullName
        email: email
    ProductContainerType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
    ProductContainerCategory:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    Program:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isCommitment:
          type: boolean
        publisher:
          $ref: '#/components/schemas/ObjectReference'
      additionalProperties: false
      example:
        name: name
        isCommitment: true
        publisher: null
        id: 1
    AgreementIdentityReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        agreementNumber:
          type: string
          nullable: true
        commitmentLevel:
          type: number
          format: double
        isCustomCommitment:
          type: boolean
      additionalProperties: false
      example:
        commitmentLevel: 9.301444243932576
        name: name
        id: 7
        agreementNumber: agreementNumber
        isCustomCommitment: true
    ProductRowUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        crayonEmployee:
          type: boolean
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        crayonEmployee: true
        id: id
        userName: userName
    ProductContainerIssue:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
      example:
        code: code
        message: message
    ProductRow:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productContainerId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
        usageCountryCode:
          type: string
          nullable: true
        salesUnitPrice:
          $ref: '#/components/schemas/Price'
        alternativeSalesUnitPrice:
          $ref: '#/components/schemas/Price'
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        program:
          $ref: '#/components/schemas/ObjectReference'
        agreement:
          $ref: '#/components/schemas/AgreementIdentityReference'
        product:
          $ref: '#/components/schemas/ProductReference'
        user:
          $ref: '#/components/schemas/ProductRowUser'
        productVariant:
          $ref: '#/components/schemas/ObjectReference'
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        grouping:
          $ref: '#/components/schemas/Grouping'
        issues:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductContainerIssue'
        offeringType:
          type: string
          nullable: true
        priceCalculation:
          $ref: '#/components/schemas/PriceCalculationType'
        invoiceReference:
          type: string
          nullable: true
        customerReference:
          type: string
          nullable: true
        salesPricePerAlternativeUnit:
          type: number
          format: double
        levelValue:
          type: number
          format: double
      additionalProperties: false
      example:
        salesPricePerAlternativeUnit: 2.027123023002322
        product:
          itemName: itemName
          itemLegalName: itemLegalName
          publisherProductId: publisherProductId
          partNumber: partNumber
          id: 1
        quantity: 2
        agreement:
          commitmentLevel: 9.301444243932576
          name: name
          id: 7
          agreementNumber: agreementNumber
          isCustomCommitment: true
        offeringType: offeringType
        invoiceReference: invoiceReference
        program: null
        alternativeSalesUnitPrice: null
        grouping:
          createdDate: 2000-01-23T04:56:07.000+00:00
          isRemoved: true
          invoiceReference: invoiceReference
          organization: null
          name: name
          invoiceProfile:
            name: name
            id: 6
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          isDisabled: true
        issues:
        - code: code
          message: message
        - code: code
          message: message
        productContainerId: 5
        salesUnitPrice:
          value: 4.145608029883936
          currencyCode: currencyCode
        usageCountryCode: usageCountryCode
        priceCalculation: 3
        productVariant: null
        customerReference: customerReference
        invoiceProfile: null
        publisher: null
        comment: comment
        id: 5
        user:
          firstName: firstName
          lastName: lastName
          crayonEmployee: true
          id: id
          userName: userName
        levelValue: 4.145608029883936
    ProductContainerCommentUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        crayonEmployee:
          type: boolean
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        crayonEmployee: true
        id: id
        userName: userName
    ProductContainerCommentType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
      - 1024
      - 2048
      - 4096
      - 8190
    ProductContainerComment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productContainerId:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/ProductContainerCommentUser'
        message:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
          nullable: true
        removed:
          type: boolean
        productContainerCommentType:
          $ref: '#/components/schemas/ProductContainerCommentType'
      additionalProperties: false
      example:
        productContainerId: 1
        timeStamp: 2000-01-23T04:56:07.000+00:00
        removed: true
        modified: 2000-01-23T04:56:07.000+00:00
        id: 7
        message: message
        user:
          firstName: firstName
          lastName: lastName
          crayonEmployee: true
          id: id
          userName: userName
        productContainerCommentType: 1
    ProductContainer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        orderListId:
          type: integer
          format: int32
          nullable: true
        note:
          type: string
          nullable: true
        usageMonth:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        activeDraft:
          type: boolean
        removed:
          type: boolean
        createdByUserId:
          type: string
          nullable: true
        axContactUserId:
          type: string
          nullable: true
        createdDate:
          type: string
          format: date-time
        orderStatusChangedDate:
          type: string
          format: date-time
          nullable: true
        contactUser:
          $ref: '#/components/schemas/UserProfile'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        program:
          $ref: '#/components/schemas/Program'
        productRows:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductRow'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductContainerComment'
        invoiceProfile:
          $ref: '#/components/schemas/InvoiceProfile'
        deliveryAddress:
          $ref: '#/components/schemas/AddressData'
        invoiceAddress:
          $ref: '#/components/schemas/AddressData'
        type:
          $ref: '#/components/schemas/ProductContainerType'
        category:
          $ref: '#/components/schemas/ProductContainerCategory'
        quoteValidToDate:
          type: string
          format: date-time
        totalSalesPrice:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Price'
        totalAlternativeSalesPrice:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Price'
        issues:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProductContainerIssue'
        submittedBy:
          $ref: '#/components/schemas/ProductContainerCommentUser'
        sent:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        invoiceReference:
          type: string
          nullable: true
        orderReference:
          type: string
          nullable: true
        requisition:
          type: string
          nullable: true
      additionalProperties: false
      example:
        note: note
        requisition: requisition
        invoiceAddress: null
        program:
          name: name
          isCommitment: true
          publisher: null
          id: 1
        type: 1
        issues:
        - null
        - null
        usageMonth: 2000-01-23T04:56:07.000+00:00
        axContactUserId: axContactUserId
        deliveryAddress:
          zipCode: zipCode
          city: city
          street: street
          countryCode: countryCode
          name: name
          county: county
          state: state
          axAddressId: 5
          completeAddress: completeAddress
        id: 0
        submittedBy: null
        createdByUserId: createdByUserId
        orderListId: 6
        activeDraft: true
        comments:
        - productContainerId: 1
          timeStamp: 2000-01-23T04:56:07.000+00:00
          removed: true
          modified: 2000-01-23T04:56:07.000+00:00
          id: 7
          message: message
          user:
            firstName: firstName
            lastName: lastName
            crayonEmployee: true
            id: id
            userName: userName
          productContainerCommentType: 1
        - productContainerId: 1
          timeStamp: 2000-01-23T04:56:07.000+00:00
          removed: true
          modified: 2000-01-23T04:56:07.000+00:00
          id: 7
          message: message
          user:
            firstName: firstName
            lastName: lastName
            crayonEmployee: true
            id: id
            userName: userName
          productContainerCommentType: 1
        invoiceReference: invoiceReference
        quoteValidToDate: 2000-01-23T04:56:07.000+00:00
        totalSalesPrice:
        - null
        - null
        sent: 2000-01-23T04:56:07.000+00:00
        createdDate: 2000-01-23T04:56:07.000+00:00
        removed: true
        totalAlternativeSalesPrice:
        - null
        - null
        organization:
          name: name
          id: 6
        name: name
        orderStatusChangedDate: 2000-01-23T04:56:07.000+00:00
        invoiceProfile:
          deliveryAddressId: 1
          requisitionNumber: requisitionNumber
          invoiceAddressId: 6
          invoiceReference: invoiceReference
          deliveryAddress:
            zipCode: zipCode
            city: city
            street: street
            countryCode: countryCode
            name: name
            county: county
            state: state
            axAddressId: 5
            completeAddress: completeAddress
          contactPersonId: 2
          consumerId: 5
          organization:
            name: name
            id: 6
          customerReference: customerReference
          name: name
          invoiceAddress: null
          id: 0
        publisher: null
        orderReference: orderReference
        contactUser:
          firstName: firstName
          lastName: lastName
          id: id
          userName: userName
          email: email
        category: 6
        productRows:
        - salesPricePerAlternativeUnit: 2.027123023002322
          product:
            itemName: itemName
            itemLegalName: itemLegalName
            publisherProductId: publisherProductId
            partNumber: partNumber
            id: 1
          quantity: 2
          agreement:
            commitmentLevel: 9.301444243932576
            name: name
            id: 7
            agreementNumber: agreementNumber
            isCustomCommitment: true
          offeringType: offeringType
          invoiceReference: invoiceReference
          program: null
          alternativeSalesUnitPrice: null
          grouping:
            createdDate: 2000-01-23T04:56:07.000+00:00
            isRemoved: true
            invoiceReference: invoiceReference
            organization: null
            name: name
            invoiceProfile:
              name: name
              id: 6
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            id: 0
            isDisabled: true
          issues:
          - code: code
            message: message
          - code: code
            message: message
          productContainerId: 5
          salesUnitPrice:
            value: 4.145608029883936
            currencyCode: currencyCode
          usageCountryCode: usageCountryCode
          priceCalculation: 3
          productVariant: null
          customerReference: customerReference
          invoiceProfile: null
          publisher: null
          comment: comment
          id: 5
          user:
            firstName: firstName
            lastName: lastName
            crayonEmployee: true
            id: id
            userName: userName
          levelValue: 4.145608029883936
        - salesPricePerAlternativeUnit: 2.027123023002322
          product:
            itemName: itemName
            itemLegalName: itemLegalName
            publisherProductId: publisherProductId
            partNumber: partNumber
            id: 1
          quantity: 2
          agreement:
            commitmentLevel: 9.301444243932576
            name: name
            id: 7
            agreementNumber: agreementNumber
            isCustomCommitment: true
          offeringType: offeringType
          invoiceReference: invoiceReference
          program: null
          alternativeSalesUnitPrice: null
          grouping:
            createdDate: 2000-01-23T04:56:07.000+00:00
            isRemoved: true
            invoiceReference: invoiceReference
            organization: null
            name: name
            invoiceProfile:
              name: name
              id: 6
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            id: 0
            isDisabled: true
          issues:
          - code: code
            message: message
          - code: code
            message: message
          productContainerId: 5
          salesUnitPrice:
            value: 4.145608029883936
            currencyCode: currencyCode
          usageCountryCode: usageCountryCode
          priceCalculation: 3
          productVariant: null
          customerReference: customerReference
          invoiceProfile: null
          publisher: null
          comment: comment
          id: 5
          user:
            firstName: firstName
            lastName: lastName
            crayonEmployee: true
            id: id
            userName: userName
          levelValue: 4.145608029883936
    ProductRowPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
          nullable: true
        comment:
          type: string
          nullable: true
        usageCountryCode:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        agreement:
          $ref: '#/components/schemas/ObjectReference'
        productVariant:
          $ref: '#/components/schemas/ObjectReference'
        grouping:
          $ref: '#/components/schemas/ObjectReference'
      additionalProperties: false
    ProgramType:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 4
    Publisher:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        id: 0
    RegionList:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    Region:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        code: code
        name: name
    ResellerSalesPriceType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    ResellerSalesPriceObjectType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
    ResellerSalesPricePriceType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    ResellerSalesPrice:
      type: object
      properties:
        objectId:
          type: integer
          format: int32
        objectType:
          $ref: '#/components/schemas/ResellerSalesPriceObjectType'
        type:
          $ref: '#/components/schemas/ResellerSalesPriceType'
        priceType:
          $ref: '#/components/schemas/ResellerSalesPricePriceType'
        value:
          type: number
          format: double
        fromDate:
          type: string
          format: date-time
        changedBy:
          type: string
          nullable: true
      additionalProperties: false
      example:
        fromDate: 2000-01-23T04:56:07.000+00:00
        changedBy: changedBy
        priceType: 5
        type: 1
        value: 5.637376656633329
        objectId: 0
        objectType: 6
    ResellerSalesPriceToggle:
      type: object
      properties:
        toggle:
          type: boolean
        objectId:
          type: integer
          format: int32
        objectType:
          $ref: '#/components/schemas/ResellerSalesPriceObjectType'
      additionalProperties: false
    SubscriptionSortBy:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
    SubscriptionAddOn:
      type: object
      properties:
        id:
          type: integer
          format: int32
        publisherSubscriptionId:
          type: string
          nullable: true
        publisherCustomerId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        quantity:
          type: integer
          format: int32
        organization:
          $ref: '#/components/schemas/ObjectReference'
        orderId:
          type: string
          nullable: true
        creationDate:
          type: string
          format: date-time
        product:
          $ref: '#/components/schemas/ProductReference'
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        markup:
          type: number
          format: double
        subscriptionTags:
          $ref: '#/components/schemas/SubscriptionTags'
        termDuration:
          type: string
          nullable: true
        autoRenewEnabled:
          type: boolean
          nullable: true
        cancellationAllowedUntilDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      example:
        product: null
        quantity: 7
        markup: 9.301444243932576
        orderId: orderId
        cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
        publisherSubscriptionId: publisherSubscriptionId
        creationDate: 2000-01-23T04:56:07.000+00:00
        termDuration: termDuration
        subscriptionTags:
          owner: owner
          createdDate: 2000-01-23T04:56:07.000+00:00
          costCenter: costCenter
          custom: custom
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          project: project
          subscriptionId: 2
          department: department
        publisherCustomerId: publisherCustomerId
        organization: null
        name: name
        publisher: null
        id: 2
        autoRenewEnabled: true
        status: null
    Product:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        skuId:
          type: string
          nullable: true
        availabilityId:
          type: string
          nullable: true
        billingCycle:
          type: string
          nullable: true
        termDuration:
          type: string
          nullable: true
      additionalProperties: false
      example:
        productId: productId
        availabilityId: availabilityId
        billingCycle: billingCycle
        skuId: skuId
        termDuration: termDuration
    ScheduledNextTermInstructions:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int32
      additionalProperties: false
      example:
        product:
          productId: productId
          availabilityId: availabilityId
          billingCycle: billingCycle
          skuId: skuId
          termDuration: termDuration
        quantity: 1
    Subscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        publisherSubscriptionId:
          type: string
          nullable: true
        entitlementId:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        customerTenant:
          $ref: '#/components/schemas/CustomerTenantReference'
        product:
          $ref: '#/components/schemas/ProductReference'
        quantity:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        provisionType:
          $ref: '#/components/schemas/ProvisionType'
        availableAddonsCount:
          type: integer
          format: int32
        subscriptions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SubscriptionAddOn'
        orderId:
          type: string
          nullable: true
        creationDate:
          type: string
          format: date-time
        billingCycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        markup:
          type: number
          format: double
        isTrial:
          type: boolean
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        priceType:
          $ref: '#/components/schemas/SubscriptionPriceType'
        salesPrice:
          type: number
          format: double
        registeredForReservedInstance:
          type: boolean
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        subscriptionTags:
          $ref: '#/components/schemas/SubscriptionTags'
        acceptAutoSuspension:
          type: boolean
          nullable: true
        autoSuspensionDate:
          type: string
          format: date-time
          nullable: true
        partNumber:
          type: string
          nullable: true
        termDuration:
          type: string
          nullable: true
        autoRenewEnabled:
          type: boolean
          nullable: true
        cancellationAllowedUntilDate:
          type: string
          format: date-time
          nullable: true
        scheduledNextTermInstructions:
          $ref: '#/components/schemas/ScheduledNextTermInstructions'
      additionalProperties: false
      example:
        subscriptions:
        - product: null
          quantity: 7
          markup: 9.301444243932576
          orderId: orderId
          cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
          publisherSubscriptionId: publisherSubscriptionId
          creationDate: 2000-01-23T04:56:07.000+00:00
          termDuration: termDuration
          subscriptionTags:
            owner: owner
            createdDate: 2000-01-23T04:56:07.000+00:00
            costCenter: costCenter
            custom: custom
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            project: project
            subscriptionId: 2
            department: department
          publisherCustomerId: publisherCustomerId
          organization: null
          name: name
          publisher: null
          id: 2
          autoRenewEnabled: true
          status: null
        - product: null
          quantity: 7
          markup: 9.301444243932576
          orderId: orderId
          cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
          publisherSubscriptionId: publisherSubscriptionId
          creationDate: 2000-01-23T04:56:07.000+00:00
          termDuration: termDuration
          subscriptionTags:
            owner: owner
            createdDate: 2000-01-23T04:56:07.000+00:00
            costCenter: costCenter
            custom: custom
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            project: project
            subscriptionId: 2
            department: department
          publisherCustomerId: publisherCustomerId
          organization: null
          name: name
          publisher: null
          id: 2
          autoRenewEnabled: true
          status: null
        orderId: orderId
        endDate: 2000-01-23T04:56:07.000+00:00
        acceptAutoSuspension: true
        cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
        salesPrice: 7.386281948385884
        entitlementId: entitlementId
        publisherSubscriptionId: publisherSubscriptionId
        isTrial: true
        registeredForReservedInstance: true
        termDuration: termDuration
        subscriptionTags: null
        provisionType: 5
        id: 0
        product:
          itemName: itemName
          itemLegalName: itemLegalName
          publisherProductId: publisherProductId
          partNumber: partNumber
          id: 1
        quantity: 6
        autoSuspensionDate: 2000-01-23T04:56:07.000+00:00
        markup: 2.027123023002322
        scheduledNextTermInstructions:
          product:
            productId: productId
            availabilityId: availabilityId
            billingCycle: billingCycle
            skuId: skuId
            termDuration: termDuration
          quantity: 1
        priceType: 4
        creationDate: 2000-01-23T04:56:07.000+00:00
        customerTenant:
          id: 1
        billingCycle: 3
        organization: null
        name: name
        invoiceProfile: null
        publisher:
          name: name
          id: 6
        partNumber: partNumber
        autoRenewEnabled: true
        availableAddonsCount: 5
        startDate: 2000-01-23T04:56:07.000+00:00
        status: 1
    SubscriptionPricing:
      type: object
      properties:
        currencyCode:
          type: string
          nullable: true
        purchasePrice:
          type: number
          format: double
        recommendedRetailPrice:
          type: number
          format: double
      additionalProperties: false
      example:
        recommendedRetailPrice: 1.4658129805029452
        purchasePrice: 6.027456183070403
        currencyCode: currencyCode
    SubscriptionDetailed:
      type: object
      properties:
        effectiveStartDate:
          type: string
          format: date-time
        commitmentEndDate:
          type: string
          format: date-time
        suspensionReasons:
          type: string
          nullable: true
        originalAgreementId:
          type: integer
          format: int32
          nullable: true
        pricing:
          $ref: '#/components/schemas/SubscriptionPricing'
        attestationAccepted:
          type: boolean
          nullable: true
        id:
          type: integer
          format: int32
        publisherSubscriptionId:
          type: string
          nullable: true
        entitlementId:
          type: string
          nullable: true
        publisher:
          $ref: '#/components/schemas/ObjectReference'
        organization:
          $ref: '#/components/schemas/ObjectReference'
        customerTenant:
          $ref: '#/components/schemas/CustomerTenantReference'
        product:
          $ref: '#/components/schemas/ProductReference'
        quantity:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        provisionType:
          $ref: '#/components/schemas/ProvisionType'
        availableAddonsCount:
          type: integer
          format: int32
        subscriptions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SubscriptionAddOn'
        orderId:
          type: string
          nullable: true
        creationDate:
          type: string
          format: date-time
        billingCycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        markup:
          type: number
          format: double
        isTrial:
          type: boolean
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        priceType:
          $ref: '#/components/schemas/SubscriptionPriceType'
        salesPrice:
          type: number
          format: double
        registeredForReservedInstance:
          type: boolean
        invoiceProfile:
          $ref: '#/components/schemas/ObjectReference'
        subscriptionTags:
          $ref: '#/components/schemas/SubscriptionTags'
        acceptAutoSuspension:
          type: boolean
          nullable: true
        autoSuspensionDate:
          type: string
          format: date-time
          nullable: true
        partNumber:
          type: string
          nullable: true
        termDuration:
          type: string
          nullable: true
        autoRenewEnabled:
          type: boolean
          nullable: true
        cancellationAllowedUntilDate:
          type: string
          format: date-time
          nullable: true
        scheduledNextTermInstructions:
          $ref: '#/components/schemas/ScheduledNextTermInstructions'
      additionalProperties: false
      example:
        subscriptions:
        - product: null
          quantity: 7
          markup: 9.301444243932576
          orderId: orderId
          cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
          publisherSubscriptionId: publisherSubscriptionId
          creationDate: 2000-01-23T04:56:07.000+00:00
          termDuration: termDuration
          subscriptionTags:
            owner: owner
            createdDate: 2000-01-23T04:56:07.000+00:00
            costCenter: costCenter
            custom: custom
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            project: project
            subscriptionId: 2
            department: department
          publisherCustomerId: publisherCustomerId
          organization: null
          name: name
          publisher: null
          id: 2
          autoRenewEnabled: true
          status: null
        - product: null
          quantity: 7
          markup: 9.301444243932576
          orderId: orderId
          cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
          publisherSubscriptionId: publisherSubscriptionId
          creationDate: 2000-01-23T04:56:07.000+00:00
          termDuration: termDuration
          subscriptionTags:
            owner: owner
            createdDate: 2000-01-23T04:56:07.000+00:00
            costCenter: costCenter
            custom: custom
            modifiedDate: 2000-01-23T04:56:07.000+00:00
            project: project
            subscriptionId: 2
            department: department
          publisherCustomerId: publisherCustomerId
          organization: null
          name: name
          publisher: null
          id: 2
          autoRenewEnabled: true
          status: null
        orderId: orderId
        endDate: 2000-01-23T04:56:07.000+00:00
        acceptAutoSuspension: true
        cancellationAllowedUntilDate: 2000-01-23T04:56:07.000+00:00
        salesPrice: 7.386281948385884
        entitlementId: entitlementId
        publisherSubscriptionId: publisherSubscriptionId
        isTrial: true
        registeredForReservedInstance: true
        attestationAccepted: true
        termDuration: termDuration
        subscriptionTags:
          owner: owner
          createdDate: 2000-01-23T04:56:07.000+00:00
          costCenter: costCenter
          custom: custom
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          project: project
          subscriptionId: 2
          department: department
        suspensionReasons: suspensionReasons
        provisionType: 7
        effectiveStartDate: 2000-01-23T04:56:07.000+00:00
        id: 5
        commitmentEndDate: 2000-01-23T04:56:07.000+00:00
        product:
          itemName: itemName
          itemLegalName: itemLegalName
          publisherProductId: publisherProductId
          partNumber: partNumber
          id: 1
        quantity: 5
        autoSuspensionDate: 2000-01-23T04:56:07.000+00:00
        markup: 2.027123023002322
        scheduledNextTermInstructions:
          product:
            productId: productId
            availabilityId: availabilityId
            billingCycle: billingCycle
            skuId: skuId
            termDuration: termDuration
          quantity: 1
        originalAgreementId: 0
        priceType: 4
        creationDate: 2000-01-23T04:56:07.000+00:00
        customerTenant:
          id: 1
        billingCycle: 3
        organization: null
        name: name
        invoiceProfile: null
        publisher:
          name: name
          id: 6
        partNumber: partNumber
        autoRenewEnabled: true
        pricing:
          recommendedRetailPrice: 1.4658129805029452
          purchasePrice: 6.027456183070403
          currencyCode: currencyCode
        availableAddonsCount: 9
        startDate: 2000-01-23T04:56:07.000+00:00
        status: 2
    SubscriptionConversion:
      type: object
      properties:
        billingCycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        offerId:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        targetOfferId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        quantity: 6
        targetOfferId: targetOfferId
        orderId: orderId
        billingCycle: 0
        offerId: offerId
        productName: productName
    ActivationLink:
      type: object
      properties:
        subscriptionId:
          type: string
          nullable: true
        uri:
          type: string
          format: uri
          nullable: true
      additionalProperties: false
      example:
        subscriptionId: subscriptionId
        uri: http://example.com/aeiou
    SubscriptionTransitionError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      additionalProperties: false
      example:
        code: 6
        description: description
    SubscriptionTransitionEligibilityDetail:
      type: object
      properties:
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SubscriptionTransitionError'
        isEligible:
          type: boolean
        transitionType:
          type: string
          nullable: true
      additionalProperties: false
      example:
        isEligible: true
        transitionType: transitionType
        errors:
        - code: 6
          description: description
        - code: 6
          description: description
    SubscriptionTransitionEligibility:
      type: object
      properties:
        catalogItemId:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        eligibilities:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SubscriptionTransitionEligibilityDetail'
      additionalProperties: false
      example:
        catalogItemId: catalogItemId
        eligibilities:
        - isEligible: true
          transitionType: transitionType
          errors:
          - code: 6
            description: description
          - code: 6
            description: description
        - isEligible: true
          transitionType: transitionType
          errors:
          - code: 6
            description: description
          - code: 6
            description: description
        quantity: 0
        description: description
        title: title
    Event:
      type: object
      properties:
        name:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
      additionalProperties: false
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        name: name
        status: status
    SubscriptionTransitionResponse:
      type: object
      properties:
        fromCatalogItemId:
          type: string
          nullable: true
        events:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Event'
        toCatalogItemId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        transitionType:
          type: string
          nullable: true
        billingCycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        term:
          type: string
          nullable: true
      additionalProperties: false
      example:
        toCatalogItemId: toCatalogItemId
        quantity: 0
        fromCatalogItemId: fromCatalogItemId
        billingCycle: 6
        term: term
        transitionType: transitionType
        events:
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          name: name
          status: status
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          name: name
          status: status
    SubscriptionTransition:
      type: object
      properties:
        toCatalogItemId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        transitionType:
          type: string
          nullable: true
        billingCycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        term:
          type: string
          nullable: true
      additionalProperties: false
    SubscriptionAddOnOffer:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductReference'
        publisher:
          $ref: '#/components/schemas/ObjectReference'
      additionalProperties: false
      example:
        product:
          itemName: itemName
          itemLegalName: itemLegalName
          publisherProductId: publisherProductId
          partNumber: partNumber
          id: 1
        publisher:
          name: name
          id: 6
    PostSubscriptionAddOn:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        offerId:
          type: string
          nullable: true
        subscriptionTags:
          $ref: '#/components/schemas/SubscriptionTags'
      additionalProperties: false
    OrganizationUsageCost:
      type: object
      properties:
        supplier:
          type: string
          nullable: true
        accountId:
          type: integer
          format: int32
        accountName:
          type: string
          nullable: true
        subscriptionName:
          type: string
          nullable: true
        subscriptionId:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        accountId: 0
        amount: 6.027456183070403
        accountName: accountName
        supplier: supplier
        subscriptionName: subscriptionName
        subscriptionId: subscriptionId
        currencyCode: currencyCode
    SubscriptionUsageCostRequest:
      type: object
      properties:
        resellerCustomerId:
          type: integer
          format: int32
        subscriptionId:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
      additionalProperties: false
    SubscriptionUsageCost:
      type: object
      properties:
        category:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        amount: 0.8008281904610115
        category: category
        currencyCode: currencyCode
    CategoryUsageCostRequest:
      type: object
      properties:
        resellerCustomerId:
          type: integer
          format: int32
        subscriptionId:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
      additionalProperties: false
    CategoryUsageCost:
      type: object
      properties:
        subcategory:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        amount: 0.8008281904610115
        subcategory: subcategory
        currencyCode: currencyCode
    SubcategoryUsageCostRequest:
      type: object
      properties:
        resellerCustomerId:
          type: integer
          format: int32
        subscriptionId:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        subcategory:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
      additionalProperties: false
    SubcategoryUsageCost:
      type: object
      properties:
        meter:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        amount: 0.8008281904610115
        meter: meter
        currencyCode: currencyCode
    SubscriptionResourceGroupUsageCost:
      type: object
      properties:
        resourceGroup:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        resourceGroup: resourceGroup
        amount: 0.8008281904610115
        currencyCode: currencyCode
    ResourceGroupUsageCostRequest:
      type: object
      properties:
        resellerCustomerId:
          type: integer
          format: int32
        subscriptionId:
          type: string
          nullable: true
        resourceGroup:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
      additionalProperties: false
    ResourceGroupUsageCost:
      type: object
      properties:
        category:
          type: string
          nullable: true
        subcategory:
          type: string
          nullable: true
        meter:
          type: string
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
      example:
        amount: 0.8008281904610115
        meter: meter
        category: category
        subcategory: subcategory
        currencyCode: currencyCode
    UserRole:
      type: integer
      format: int32
      enum:
      - 0
      - 1
      - 2
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        lockoutEnabled:
          type: boolean
        lockoutEnd:
          type: string
          format: date-time
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
        tenantAdmin:
          type: boolean
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        twoFactorEnabled: true
        tenantAdmin: true
        phoneNumber: phoneNumber
        emailConfirmed: true
        lockoutEnabled: true
        id: id
        userName: userName
        email: email
        phoneNumberConfirmed: true
        lockoutEnd: 2000-01-23T04:56:07.000+00:00
    UserChangePassword:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        oldPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "Please insert \"Bearer {access token}\" below."
      name: Authorization
      in: header
